[build-system]
requires = [
    "setuptools>=64",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "isage-studio"
dynamic = ["version"]
description = "SAGE Studio - Low-Code Web UI for Pipeline Development"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "IntelliStream Team", email = "intellistream@outlook.com" },
]
keywords = [
    "sage",
    "studio",
    "low-code",
    "web-ui",
    "pipeline",
    "development",
    "intellistream",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
    "Topic :: Utilities",
]
license = "MIT"

# 核心依赖
dependencies = [
    # SAGE framework dependencies
    "isage-common>=0.1.0",
    "isage-kernel>=0.1.0",
    "isage-middleware>=0.1.0",
    "isage-libs>=0.1.0",

    # Backend API dependencies
    "pydantic[email]>=2.0.0",
    # FastAPI 0.115.x 依赖 starlette >=0.40,<0.47
    "fastapi>=0.115,<0.116",
    "starlette>=0.40,<0.47",
    # Uvicorn 需要 h11
    "uvicorn[standard]>=0.34.0",
    "h11>=0.8",
    "websockets>=11.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "structlog>=23.0.0",
    "pydantic-settings>=2.0.0",
    "configparser>=5.3.0",

    # Utilities
    "jinja2>=2.11.1",
    "markdown>=3.4.4",
    "markupsafe>=2.0.1",
    "packaging>=20.5",
]

[project.optional-dependencies]
# 开发工具依赖
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.1.0",
    "black>=23.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

# 完整安装（包括所有可选依赖）
full = [
    "isage-studio[dev]",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Documentation = "https://intellistream.github.io/SAGE-Pub/"
Repository = "https://github.com/intellistream/SAGE.git"
"Bug Tracker" = "https://github.com/intellistream/SAGE/issues"

[project.scripts]
# Studio CLI commands will be integrated into sage CLI via sage-tools
# No standalone scripts needed here

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
"sage.studio" = [
    "py.typed",
    "*.pyi",
    "templates/*.html",
    "static/*",
    "config/**/*",
    "data/**/*",
    "docs/**/*",
    "frontend/**/*",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "C90",  # mccabe complexity
]

ignore = [
    "E501",  # line too long (handled by formatter)
]

mccabe = { max-complexity = 10 }

per-file-ignores = { "__init__.py" = ["F401"], "tests/**/*" = ["PLR2004", "S101", "TID252"] }

[tool.ruff.lint.isort]
known-first-party = ["sage"]
force-single-line = false
combine-as-imports = true

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--benchmark-storage=../../.sage/benchmarks",
    "-o",
    "cache_dir=../../.sage/cache/pytest",
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "network: marks tests as network tests",
    "system: marks tests as system tests",
    "core: marks tests as core functionality tests",
    "smoke: marks tests as smoke tests (quick validation)",
    "frontend: marks tests as frontend tests",
]
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources",
    "ignore:.*pkg_resources is deprecated.*:UserWarning",
]

[tool.setuptools.dynamic]
version = {attr = "sage.studio._version.__version__"}

[build-system]
requires = ["setuptools>=64", "wheel", "packaging>=24.2"]
build-backend = "setuptools.build_meta"



[project]
name = "isage"
dynamic = ["version"]
description = "SAGE - Streaming-Augmented Generative Execution"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SAGE Team", email = "shuhao_zhang@hust.edu.cn"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.10"

# SAGE Meta Package - 默认安装标准开发环境
dependencies = [
    # L1: Foundation
    "isage-common>=0.1.0",
    # L2: Platform
    "isage-platform>=0.1.0",
    # L3: Core
    "isage-kernel>=0.1.0",
    "isage-libs>=0.1.0",
    # L4: Domain
    "isage-middleware>=0.1.0",
    # L6: Interface
    "isage-tools[cli]>=0.1.0",  # CLI 工具
    "isage-studio>=0.1.0",      # Web UI
    # 数据科学基础库
    "numpy>=1.26.0,<2.3.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "scipy>=1.15.0,<2.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]

[project.optional-dependencies]
# 最小化安装 - 仅核心功能（生产环境）
# 用途：容器化部署、生产运行、最小依赖
# 大小：~100MB
minimal = [
    "isage-common>=0.1.0",      # L1: Foundation
    "isage-platform>=0.1.0",    # L2: Platform
    "isage-kernel>=0.1.0",      # L3: Core Engine
]

# 核心运行时 - 等同于 minimal（向后兼容）
core = [
    "isage-common>=0.1.0",      # L1: Foundation
    "isage-platform>=0.1.0",    # L2: Platform
    "isage-kernel>=0.1.0",      # L3: Core Engine
]

# 标准开发环境 - 日常应用开发（默认）
# 用途：开发 SAGE 应用、使用 RAG/LLM operators
# 大小：~200MB
# 注意：这与默认 dependencies 相同，保留是为了向后兼容
standard = [
    "isage-common>=0.1.0",      # L1
    "isage-platform>=0.1.0",    # L2
    "isage-kernel>=0.1.0",      # L3
    "isage-libs>=0.1.0",        # L3
    "isage-middleware>=0.1.0",  # L4
    "isage-tools[cli]>=0.1.0",  # L6
    "isage-studio>=0.1.0",      # L6
    # 数据科学基础库
    "numpy>=1.26.0,<2.3.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "scipy>=1.15.0,<2.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]

# 完整功能 - 包含示例应用和性能测试
# 用途：学习 SAGE、运行示例、性能评估
# 大小：~300MB
full = [
    "isage[standard]",
    "isage-apps>=0.1.0",        # L5: 示例应用（医疗、视频）
    "isage-benchmark>=0.1.0",   # L5: 性能基准测试
]

# 框架开发 - 修改 SAGE 框架本身
# 用途：贡献代码、研究新功能
# 大小：~400MB
dev = [
    "isage[full]",
    "isage-tools[dev]>=0.1.0",  # 完整开发工具套件
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Documentation = "https://intellistream.github.io/SAGE-Pub/"
Repository = "https://github.com/intellistream/SAGE.git"
"Bug Tracker" = "https://github.com/intellistream/SAGE/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
# 与flake8保持一致的配置
target-version = "py311"
line-length = 88

[tool.ruff.lint]
# 启用的规则集（与flake8兼容）
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "C90",  # mccabe complexity
]

# 忽略的错误（与flake8 .flake8文件保持一致）
ignore = [
    "E501",  # line too long (handled by formatter),
    "B904",  # raise-without-from-inside-except
    "C901",  # complex-structure
]

# 复杂度限制（与flake8保持一致）
mccabe = { max-complexity = 10 }

# 文件特定忽略
per-file-ignores = { "__init__.py" = ["F401"], "tests/**/*" = ["PLR2004", "S101", "TID252"] }

[tool.ruff.lint.isort]
known-first-party = ["sage"]
# 移除profile字段，Ruff不支持此字段
# 使用force-single-line = false 来模拟black风格
force-single-line = false
combine-as-imports = true

[tool.setuptools.dynamic]
version = {attr = "sage._version.__version__"}

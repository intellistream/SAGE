[build-system]
requires = ["setuptools>=64", "wheel", "packaging>=24.2"]
build-backend = "setuptools.build_meta"


[project]
name = "isage-libs"
dynamic = ["version"]
description = "SAGE Libraries - Streaming-Augmented Generative Execution"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "IntelliStream Team", email = "shuhao_zhang@hust.edu.cn" },
]
keywords = [
    "applications",
    "examples",
    "templates",
    "rag",
    "agents",
    "streaming",
    "tutorials",
    "sage",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
license = {text = "MIT"}

# 核心依赖
dependencies = [
    "isage-common>=0.1.0",  # 核心基础组件（包含函数接口）

    # 明确指定numpy版本以避免冲突（与vllm/numba兼容）
    "numpy>=1.26.0,<2.3.0",

    # Libs-specific dependencies
    # Vector databases
    "chromadb>=1.0.20",
    "pymilvus[model]>=2.4.0",  # 包含BGEM3EmbeddingFunction支持

    # Stream processing examples
    "kafka-python>=2.0.0",
    "redis>=4.0.0",

    # Evaluation tools
    "datasets>=2.0.0",
    "evaluate>=0.4.0",
    "rouge>=1.0.0",
    "rouge-score>=0.1.0",
    "bleu>=0.3.0",

    # Jupyter support
    "jupyter>=1.0.0",
    "notebook>=6.0.0",

    #loaders依赖
    "PyPDF2>=3.0.0",
    "python-docx>=0.8.11",

    # OCR tools
    "easyocr>=1.7.0",
]

[project.optional-dependencies]
# 完整功能 - 包含所有可选依赖
full = [
    "isage-kernel>=0.1.0",  # kernel 变为可选依赖（用于高级特性）
    "isage-libs[llm]",
    "isage-libs[finetune]",
    # 企业级数据库
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    # 企业级监控
    "prometheus-client>=0.19.0",
    "structlog>=23.0.0",
]

# LLM-specific dependencies
llm = [
    "vllm>=0.9.2",  # 允许更新的vllm版本
    "transformers>=4.56.1",  # 满足vllm/trl/middleware要求
    "tokenizers>=0.22.0",
]

# Finetuning dependencies
finetune = [
    # LoRA/PEFT 支持
    "peft>=0.7.0",

    # 训练加速
    "accelerate>=0.25.0",
    "bitsandbytes>=0.41.0",  # 量化训练（减少显存占用）

    # 监控和可视化
    "tensorboard>=2.14.0",
    "wandb>=0.16.0",

    # TRL for RLHF/DPO (已经是依赖项，这里明确标注)
    "trl>=0.23.0",
]

# Finetuning with distributed training support
finetune-full = [
    "isage-libs[finetune]",
    "deepspeed>=0.12.0",  # 分布式训练（需要 CUDA 环境）
]

# Optional: LLaMA-Factory CLI (兼容性问题，不推荐使用)
# 如需使用，请手动安装并降级 transformers：
# pip install llmtuner transformers==4.41.0
finetune-llamafactory = [
    "llmtuner>=0.7.0",  # 注意：与 transformers 4.56+ 不兼容
]

# Medical diagnosis application dependencies
medical = [
    "huggingface_hub>=0.19.0",
    "datasets>=2.14.0",
    "pillow>=10.0.0",
    "scikit-learn>=1.3.0",
]

# Video intelligence examples dependencies
video = [
    "opencv-python>=4.5.0",  # Video processing
    "torch>=2.0.0",  # PyTorch for models
    "torchvision>=0.15.0",  # Vision models
    "transformers>=4.30.0",  # CLIP and other transformers
    "Pillow>=9.0.0",  # Image processing
]

# Examples dependencies (aggregate of all example-specific deps)
examples = [
    "isage-libs[video]",
    "pyyaml>=6.0",  # Config files
]

# All applications (aggregate)
all-apps = [
    "isage-libs[medical]",
    "isage-libs[finetune]",
    "isage-libs[examples]",
]

# 开发依赖
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
]

# 文档生成
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.6.0",
    "pymdown-extensions>=10.2.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Documentation = "https://intellistream.github.io/SAGE-Pub/"
Repository = "https://github.com/intellistream/SAGE.git"
"Bug Tracker" = "https://github.com/intellistream/SAGE/issues"

# [project.scripts]
# sage-examples = "sage.libs.cli:main"
# Note: sage-examples CLI is not yet implemented
# This command entry point is commented out to avoid import errors

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
"sage.libs" = ["py.typed", "**/*"]
"sage.apps" = ["py.typed", "**/*"]

# Development tools configuration
[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_dynamic = ["version"]
cache_dir = "../../.sage/cache/mypy"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.setuptools.dynamic]
version = {attr = "sage.libs._version.__version__"}

# ============================================================================
# Code Quality Configuration
# Extends from root ruff.toml for unified standards across all packages
# ============================================================================
[tool.ruff]
extend = "../../tools/ruff.toml"

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--benchmark-storage=../../.sage/benchmarks",
    "-o",
    "cache_dir=../../.sage/cache/pytest",
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "network: marks tests as network tests",
    "system: marks tests as system tests",
    "core: marks tests as core functionality tests",
    "smoke: marks tests as smoke tests (quick validation)",
    "cli: marks tests as CLI tests",
    "external: marks tests requiring external services/APIs",
]

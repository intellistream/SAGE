[build-system]
requires = [
    "scikit-build-core>=0.8.0",
    "pybind11>=2.13.0",
]
build-backend = "scikit_build_core.build"



[project]
name = "isage-middleware"
dynamic = ["version"]
description = "SAGE Middleware - Streaming-Augmented Generative Execution"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "IntelliStream Team", email = "shuhao_zhang@hust.edu.cn" },
]
keywords = [
    "data",
    "api",
    "reasoning",
    "dataflow",
    "llm",
    "ml",
    "middleware",
    "framework",
    "rag",
    "intellistream",
    "ai",
    "sage",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    # SAGE framework dependencies
    "isage-kernel>=0.1.0",  # 继承common的所有依赖

    # Middleware-specific dependencies
    # Authentication and security
    "python-jose==3.5.0",
    "passlib==1.7.4",

    # Task queue
    "celery==5.5.3",
    "flower==2.0.1",

    # API clients
    "openai>=1.99.1",  # vLLM 0.10.1.1兼容的openai版本
    "ollama==0.5.1",
    "zhipuai==2.1.5.20250801",
    "cohere>=5.16.1",
    "anthropic>=0.25.0",

    # ML/AI libraries
    "transformers>=4.54.1",
    "tokenizers>=0.21.0",  # 放宽版本约束
    "faiss-cpu>=1.7.0",
    "bm25s==0.2.13",
    "rank-bm25>=0.2.0",
    "PyStemmer==3.0.0",

    # Network and data processing
    "aiohttp==3.12.15",
    "frozenlist==1.7.0",
    "feedparser==6.0.11",

    # ML acceleration
    "accelerate>=1.9.0",  # 放宽版本约束
    "sentence-transformers>=3.1.0",  # 放宽版本约束
    "InstructorEmbedding==1.0.1",
    "huggingface-hub>=0.34.0",  # 放宽版本约束
    "peft==0.17.0",

    # Scientific computing
    "scipy>=1.15.0,<2.0.0",  # 统一scipy版本范围，与其他包兼容

    # Documentation
    "markdown>=3.4.4",
    "pymdown-extensions>=10.2.1",
]
license = {text = "MIT"}

[project.optional-dependencies]
# SAGE framework dependencies (for local development)
# 注意：移除了 isage-tools 以避免循环依赖
# 开发时应安装 isage[dev] 或 isage-tools[dev] 来获取完整工具链
sage = [
    "isage-common>=0.1.0",
]

# VLLM支持（可选，需要CUDA）
vllm = [
    "vllm>=0.9.2",
]

# 基础数据库支持
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "asyncpg>=0.30.0",
    "pymongo[srv]>=4.8.0",
]

# 消息队列支持
messagequeue = [
    "celery>=5.5.0",
    "redis>=4.0.0",
    "kafka-python>=2.0.0",
    "pika>=1.3.2",
]

# 监控和日志
monitoring = [
    "prometheus-client>=0.19.0",
    "structlog>=23.0.0",
    "sentry-sdk[fastapi]>=2.18.0",
]

# LLM支持
llm = [
    "anthropic>=0.25.0",
    "google-generativeai>=0.8.3",
    "cohere>=5.16.1",
    "langchain>=0.3.18",
    "llama-index>=0.11.33",
]

# 文档生成
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.6.0",
    "jinja2>=2.11.1",
    "markupsafe>=2.0.1",
    "click>=7.0",
    "packaging>=20.5",
]

# 测试工具
testing = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "testcontainers>=3.7.0",
    "pytest-mock>=3.10.0",
    "pytest-docker>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://intellistream.github.io/SAGE-Pub/"
Issues = "https://github.com/intellistream/SAGE/issues"

[project.scripts]

# ============================================================================
# scikit-build-core configuration
# ============================================================================

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--benchmark-storage=../../.sage/benchmarks",
    "-o",
    "cache_dir=../../.sage/cache/pytest",
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "network: marks tests as network tests",
    "system: marks tests as system tests",
    "core: marks tests as core functionality tests",
    "smoke: marks tests as smoke tests (quick validation)",
    "cli: marks tests as CLI tests",
]

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]
include = "\\.pyi?$"
extend-exclude = "/(\n    \\.git\n    | \\.venv\n    | build\n    | dist\n)/\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = [
    "sage",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
overrides = [
    { module = "sage.service.*", ignore_missing_imports = false },
    { module = "fastapi.*", ignore_missing_imports = true },
]

[tool.ruff]
# 与flake8保持一致的配置
target-version = "py311"
line-length = 88

[tool.ruff.lint]
# 启用的规则集（与flake8兼容）
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "C90",  # mccabe complexity
]

# 忽略的错误（与flake8 .flake8文件保持一致）
ignore = [
    "E501",
    "B904",
    "C901",
    "E402",
    "B026",
    "B007",
    "B023",
    "B025",
    "B018",
    "F402",
    "F405",
    "UP035",
    "UP007",
]

# 复杂度限制（与flake8保持一致）
mccabe = { max-complexity = 10 }

# 文件特定忽略
per-file-ignores = { "__init__.py" = ["F401"], "tests/**/*" = ["PLR2004", "S101", "TID252"] }

[tool.ruff.lint.isort]
known-first-party = ["sage"]
force-single-line = false
combine-as-imports = true

[tool.setuptools.dynamic]
version = {attr = "sage.middleware._version.__version__"}

# ============================================================================
# scikit-build-core configuration
# ============================================================================
[tool.scikit-build]
# CMake 配置
cmake.minimum-version = "3.20"
cmake.build-type = "Release"
cmake.verbose = true

# 构建目录
build-dir = "build/{wheel_tag}"

# 日志级别
logging.level = "INFO"

# Wheel 配置
wheel.packages = ["src/sage"]
wheel.expand-macos-universal-tags = true

# 严格配置验证
strict-config = true

# 安装 .so 文件的额外模式
wheel.install-dir = "sage/middleware"

# 元数据钩子 - 从 _version.py 读取版本
[[tool.scikit-build.generate]]
path = "sage/middleware/_version_generated.py"
template = '''
"""
Generated version file - DO NOT EDIT
Version is managed in _version.py
"""
__version__ = "${version}"
'''
location = "build"

# 开发模式配置
[tool.scikit-build.editable]
mode = "redirect"
verbose = true

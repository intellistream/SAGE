[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sage-middleware"
version = "1.0.0"
description = "SAGE Framework - 中间件组件 (包含 LLM 中间件服务)"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "IntelliStream Team", email = "sage@intellistream.cc"},
]
keywords = ["rag", "llm", "middleware", "service", "api", "dataflow", "reasoning", "framework"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
]

dependencies = [
    "sage-kernel>=1.0.0",  
    
    # 服务层专用依赖 (pinned versions)
    "python-jose==3.5.0", # JWT 处理 (removed [cryptography] extra)
    "passlib==1.7.4",          # 密码加密 (removed [bcrypt] extra)
    "celery==5.5.3",                   # 任务队列
    "flower==2.0.1",                   # Celery 监控界面
    
    # LLM 中间件专用依赖 (pinned versions)
    "openai==1.98.0",                          # OpenAI API 客户端
    "ollama==0.5.1",                          # Ollama API 客户端
    "zhipuai==2.1.5.20250801",                  # 智谱AI API 客户端
    "cohere==5.16.2",                  # Cohere API 客户端
    "transformers==4.54.1",            # HuggingFace 模型
    "tokenizers==0.21.4",              # Tokenizers for transformers
    "vllm==0.10.0",                     # vLLM for high-performance inference
    
    # Search and retrieval dependencies (pinned versions)
    "faiss-cpu==1.9.0",               # FAISS for vector similarity search
    "bm25s==0.2.13",                  # BM25 search implementation
    "rank-bm25==0.2.2",                      # BM25 ranking algorithm (fixed name)
    "PyStemmer==3.0.0",               # Text stemming for search
    
    # aiohttp (pinned versions)
    "aiohttp==3.12.15",
    "frozenlist==1.7.0",

    # httpx (pinned versions)
    "httpx==0.28.1",
    "certifi==2025.8.3",

    # Text processing dependencies (pinned versions)
    "feedparser==6.0.11",             # RSS/Atom feed parsing
    
    # ML/AI dependencies used in middleware (pinned versions)
    "accelerate==1.9.0",              # For model acceleration
    "sentence-transformers==5.0.0",    # For embeddings
    "InstructorEmbedding==1.0.1",      # For instructor embeddings
    "huggingface-hub==0.34.3",         # HuggingFace Hub client
    "peft==0.17.0",                            # Parameter-efficient fine-tuning
]

[project.optional-dependencies]
# 数据库支持
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "asyncpg>=0.28.0",
    "pymongo[srv]>=4.0.0",
]

# 消息队列支持
messagequeue = [
    "celery>=5.3.0",
    "redis>=4.5.0",
    "kafka-python>=2.0.0",
    "pika>=1.3.0",
]

# 监控和日志
monitoring = [
    "prometheus-client>=0.17.0",
    "structlog>=23.0.0",
    "sentry-sdk[fastapi]>=1.32.0",
]

# LLM 中间件扩展（从 sage-middleware-utils 合并）
llm = [
    "anthropic>=0.3.0",               # Anthropic Claude API
    "google-generativeai>=0.3.0",     # Google Gemini API
    "cohere>=4.0.0",                  # Cohere API
    "langchain>=0.1.0",               # LangChain 框架
    "llama-index>=0.9.0",             # LlamaIndex 框架
]

# 完整中间件功能
full = ["sage-middleware[database,messagequeue,monitoring,websocket,llm]"]

# 测试专用依赖（非开发工具）
testing = [
    "pytest>=7.0.0",               # 测试框架
    "pytest-asyncio>=0.21.0",      # 异步测试
    "pytest-cov>=4.0.0",           # 覆盖率测试
    "pytest-benchmark>=4.0.0",     # 性能基准测试
    "testcontainers>=3.7.0",       # 容器化测试
    "pytest-mock>=3.10.0",         # 模拟工具
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://sage-docs.intellistream.cc"

# 中间件入口点
[project.scripts]
sage-middleware = "sage.service.main:main"
sage-server = "sage.service.server:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["sage*"]
namespaces = false

# 添加类型信息支持和配置文件
[tool.setuptools.package-data]
"sage.service" = ["py.typed", "*.pyi", "*.yaml", "*.json", "templates/*", "static/*"]
"sage.middleware" = ["py.typed", "*.pyi"]

[tool.pytest.ini_options]
testpaths = ["tests", "src"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    #     "--cov=sage.service" # Coverage disabled,
    #     "--cov-report=term-missing" # Coverage disabled,
    #     "--cov-report=html" # Coverage disabled,
#    "--cov-report=xml",
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sage"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "sage.service.*"
ignore_missing_imports = false

# FastAPI相关的类型检查配置
[[tool.mypy.overrides]]
module = "fastapi.*"
ignore_missing_imports = true

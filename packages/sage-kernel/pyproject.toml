[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sage-kernel"
version = "1.0.0"
description = "SAGE Framework - 统一内核 (Core + Runtime + Utils + CLI)"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "IntelliStream Team", email = "sage@intellistream.cc"},
]
keywords = ["rag", "llm", "dataflow", "reasoning", "framework", "cli", "kernel"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Environment :: Console",
]

dependencies = [
    
    # Dependencies from sage-kernel-utils (pinned versions)
    "pyyaml==6.0.2",
    "python-dotenv==1.1.1",
    "python_multipart==0.0.20",
    # Dependencies from sage-kernel-runtime-extended (pinned versions)
    "dill==0.4.0",
    "ray==2.48.0",
    "grpcio==1.74.0",
    "protobuf==6.31.1",
    "msgpack==1.1.1",
    # Core system dependencies (pinned versions)
    "torch==2.3.0",  # vllm requires exactly torch==2.3.0
    "torchvision==0.18.0",
    
    # Network dependencies for proxy support (pinned versions)
    "httpx==0.28.1",
    "socksio==1.0.0",
    
    # System and utilities (pinned versions)
    "psutil==7.0.0",
    "numpy==2.3.2",
    "Cython==3.1.2",
    "pybind11==3.0.0",
    
    # Web and API (pinned versions)
    "aioboto3==14.1.0",
    "fastapi==0.115.12",
    "uvicorn==0.34.3",
    "h11==0.16.0", # uvicorn requires h11>=0.8.0

    "requests==2.32.4",
    "aiohappyeyeballs==2.6.1",
    "aiosignal==1.4.0",
    
    # Configuration and data (pinned versions)
    "pydantic==2.9.2",
    "PyYAML==6.0.2",
    "python-dotenv==1.1.1",
    "Jinja2==3.1.6",
    
    # CLI 专用依赖 (pinned versions)
    "shellingham==1.5.4",              # Shell 检测
]

[project.optional-dependencies]
# CLI 增强功能
enhanced = [
    "ipython>=8.0.0",                  # 交互式 Python shell
    "colorama>=0.4.6",                 # 跨平台彩色输出
    "pygments>=2.15.0",                # 语法高亮
]

# 开发依赖
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

web = [
    "fastapi>=0.100.0", # 这个是frontend使用的
    "websockets>=11.0", # 这个也是frontend使用的
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://sage-docs.intellistream.cc"

# CLI入口点定义
[project.scripts]
sage = "sage.cli.main:app"
sage-kernel = "sage.cli.main:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"sage" = ["py.typed"]

# pytest配置
[tool.pytest.ini_options]
testpaths = ["tests", "src/sage"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
    "--cov=sage",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "network: marks tests as network tests",
    "system: marks tests as system tests",
]

# Coverage配置
[tool.coverage.run]
source = ["src/sage"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/_test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

# Black代码格式化
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | \.venv
  | build
  | dist
)/
'''

# Ruff linting
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

# MyPy类型检查
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sage.*",
]
ignore_missing_imports = true

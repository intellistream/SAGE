[build-system]
requires = [
    "setuptools>=64",
    "wheel",
    "packaging>=24.2",
]
build-backend = "setuptools.build_meta"

[project]
name = "isage-kernel"
dynamic = [
    "version",
]
description = "SAGE Kernel Module - Streaming-Augmented Generative Execution"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "IntelliStream Team", email = "shuhao_zhang@hust.edu.cn" },
]
keywords = [
    "data",
    "reasoning",
    "kernel",
    "dataflow",
    "llm",
    "ml",
    "framework",
    "rag",
    "intellistream",
    "cli",
    "ai",
    "sage",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "isage-common>=0.1.0",
    "isage-platform>=0.1.0",
    "python-dotenv==1.1.1",
    "python_multipart==0.0.20",
    "ray==2.48.0",
    "grpcio>=1.74.0",
    "protobuf>=6.32.0",
    "msgpack>=1.1.1",
    "torch==2.7.1",
    "torchvision==0.22.1",
    "httpx==0.28.1",
    "socksio==1.0.0",
    "numpy>=1.26.0,<2.3.0",
    "Cython==3.1.2",
    "pybind11==3.0.0",
    "aioboto3==14.1.0",
    "fastapi>=0.115.0",
    "uvicorn>=0.34.0",
    "h11>=0.16.0",
    "requests>=2.32.0",
    "aiohappyeyeballs>=2.6.0",
    "aiosignal>=1.4.0",
    "pydantic>=2.10.0",
    "Jinja2==3.1.6",
    "shellingham>=1.5.0",
    "tabulate>=0.9.0",
    "typer>=0.15.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "questionary>=1.10.0",
    "prompt_toolkit>=3.0.50",
    "filelock>=3.16.1",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.0.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]
web = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.6.0",
    "markdown>=3.3.6",
    "markupsafe>=2.0.1",
    "packaging>=20.5",
    "pymdown-extensions>=10.2.0",
]
monitoring = [
    "psutil>=5.9.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://intellistream.github.io/SAGE-Pub/"
Issues = "https://github.com/intellistream/SAGE/issues"

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = [
    "src",
]
include = [
    "sage*",
]
exclude = [
    "tests*",
    "docs*",
    "enterprise/*",
    "commercial/*",
]
namespaces = true

[tool.setuptools.package-data]
sage = [
    "py.typed",
]

[tool.setuptools.dynamic.version]
attr = "sage.kernel._version.__version__"

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--benchmark-storage=../../.sage/benchmarks",
    "-o",
    "cache_dir=../../.sage/cache/pytest",
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "network: marks tests as network tests",
    "system: marks tests as system tests",
    "core: marks tests as core functionality tests",
    "smoke: marks tests as smoke tests (quick validation)",
    "cli: marks tests as CLI tests",
    "ray: marks tests requiring Ray framework (may be slow)",
    "distributed: marks tests requiring distributed setup",
]
filterwarnings = [
    "ignore::DeprecationWarning:ray._private.client_mode_hook",
    "ignore:.*local mode is an experimental feature.*:DeprecationWarning",
    "ignore::DeprecationWarning:pkg_resources",
    "ignore:.*SWIG.*:DeprecationWarning",
    "ignore:.*SwigPyPacked.*:DeprecationWarning",
    "ignore:.*SwigPyObject.*:DeprecationWarning",
    "ignore:.*swigvarlink.*:DeprecationWarning",
    "ignore:.*pkg_resources is deprecated.*:UserWarning",
    "ignore::pytest.PytestReturnNotNoneWarning",
]

[tool.coverage.run]
data_file = ".sage/logs/.coverage"
source = [
    "src/sage",
]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/_test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 100
target-version = [
    "py310",
    "py311",
    "py312",
]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.pytest_cache\n  | \\.ruff_cache\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.mypy]
python_dynamic = [
    "version",
]
cache_dir = "../../.sage/cache/mypy"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sage.*",
]
ignore_missing_imports = true

[tool.ruff]
extend = "../../tools/ruff.toml"

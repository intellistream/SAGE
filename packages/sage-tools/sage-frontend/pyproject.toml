[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sage-frontend"
version = "1.0.0"
description = "SAGE Framework - Web Frontend and Dashboard Interface"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "IntelliStream Team", email = "sage@intellistream.cc"},
]
keywords = ["web", "frontend", "dashboard", "fastapi", "angular", "ui", "visualization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Visualization",
    "Framework :: FastAPI",
    "Environment :: Web Environment",
]

dependencies = [
    # Web框架核心依赖
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "websockets>=11.0",
    
    # 服务器和中间件
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    
    # 配置和环境
    "python-dotenv>=1.0.0",
    "pydantic[email]>=2.0.0",
    "pydantic-settings>=2.0.0",
    "configparser>=5.3.0",
    
    # 数据处理
    "PyYAML>=6.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    
    # 文件上传和处理
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
    
    # 日志和监控
    "structlog>=23.0.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
# SAGE核心包集成
sage = [
    "sage-kernel>=1.0.0",
    "sage-middleware>=1.0.0", 
    "sage-userspace>=1.0.0",
]

# 开发依赖
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]

# 数据可视化增强
visualization = [
    "plotly>=5.15.0",
    "dash>=2.11.0",
    "streamlit>=1.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

# 安全增强
security = [
    "cryptography>=41.0.0",
    "bcrypt>=4.0.0",
    "authlib>=1.2.0",
]

# 性能监控
monitoring = [
    "prometheus-client>=0.17.0",
    "psutil>=5.9.0",
    "memory-profiler>=0.61.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://sage-docs.intellistream.cc/frontend"
Issues = "https://github.com/intellistream/SAGE/issues"

# Web服务入口点定义
[project.scripts]
sage-frontend = "sage_frontend.sage_server.main:main"
sage-server = "sage_frontend.sage_server.main:main"
sage-dashboard = "sage_frontend.sage_server.main:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["sage_frontend*"]
namespaces = true

# 包含静态文件和模板
[tool.setuptools.package-data]
"sage_frontend" = ["py.typed", "*.pyi"]

# 代码质量工具配置
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
skip-string-normalization = true
extend-exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
    | dashboard/node_modules
    | dashboard/dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
skip = ["dashboard"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
exclude = [
    "dashboard/",
    "node_modules/",
]

[tool.ruff]
line-length = 88
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]
exclude = [
    "dashboard",
    "node_modules",
]

[tool.pytest.ini_options]
testpaths = ["tests", "sage_server"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-v",
    # Coverage disabled for now
    # "--cov=sage_frontend",
    # "--cov-report=html",
    # "--cov-report=term-missing",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "frontend: marks tests as frontend tests",
]

[tool.coverage.run]
source = ["sage_frontend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "dashboard/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sage-service"
version = "1.0.0"
description = "SAGE Framework - 服务层组件"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "IntelliStream Team", email = "sage@intellistream.cc"},
]
keywords = ["rag", "llm", "service", "microservice", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
]

dependencies = [
    "sage-core",  # 依赖核心包
    "sage-utils", # 依赖工具包
    "sage-lib",   # 依赖库组件
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "aiofiles>=0.8.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "redis>=4.5.0",
]

[project.optional-dependencies]
# 数据库支持
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    "asyncpg>=0.28.0",
    "pymongo[srv]>=4.0.0",
]

# 消息队列支持
messagequeue = [
    "celery>=5.3.0",
    "redis>=4.5.0",
    "kafka-python>=2.0.0",
    "pika>=1.3.0",
]

# 监控和日志
monitoring = [
    "prometheus-client>=0.17.0",
    "structlog>=23.0.0",
    "sentry-sdk[fastapi]>=1.32.0",
]

# WebSocket支持
websocket = [
    "websockets>=11.0.0",
    "python-socketio>=5.8.0",
]

# 完整服务功能
full = ["database", "messagequeue", "monitoring", "websocket"]

# 开发依赖
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0",  # 用于测试API
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

# 测试依赖
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "testcontainers>=3.7.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://sage-docs.intellistream.cc"

# 服务入口点
[project.scripts]
sage-service = "sage.service.main:main"
sage-server = "sage.service.server:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["sage*"]
namespaces = false

# 添加类型信息支持和配置文件
[tool.setuptools.package-data]
"sage.service" = ["py.typed", "*.pyi", "*.yaml", "*.json", "templates/*", "static/*"]

[tool.pytest.ini_options]
testpaths = ["tests", "src"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=sage.service",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sage"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "sage.service.*"
ignore_missing_imports = false

# FastAPI相关的类型检查配置
[[tool.mypy.overrides]]
module = "fastapi.*"
ignore_missing_imports = true

[build-system]
requires = ["setuptools>=64", "wheel", "setuptools-scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "sage-utils"
version = "1.0.0"
description = "SAGE Framework - 通用工具库"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "IntelliStream Team", email = "sage@intellistream.cc"},
]
keywords = ["rag", "llm", "utilities", "helpers", "common"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

dependencies = [
    "numpy>=1.21.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "rich>=13.0.0",
    "PyYAML>=6.0",
    "click>=8.0.0",
    "pathlib-abc>=0.1.0",
    "pipmaster>=0.1.0",
]

[project.optional-dependencies]
# 开发依赖
dev = [
    "pytest",
    #     "pytest-cov>=4.0.0" # Coverage disabled,
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

# 测试依赖
test = [
    "pytest",
    #     "pytest-cov>=4.0.0" # Coverage disabled,
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
]

# 性能测试
benchmark = [
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
]

# 完整开发环境
full = [
    "sage-utils[dev,test,benchmark]",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://sage-docs.intellistream.cc/utils"
"Bug Tracker" = "https://github.com/intellistream/SAGE/issues"

# 重要：正确配置setuptools以支持IDE跳转
[tool.setuptools]
# 指定源码目录
package-dir = {"" = "src"}
# 确保包数据被包含
include-package-data = true
# 支持ZIP安全
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["sage*"]
# 保持命名空间包结构
namespaces = false

# 添加类型信息支持
[tool.setuptools.package-data]
"sage.utils" = ["py.typed", "*.pyi"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    #     "--cov=sage.utils" # Coverage disabled,
    #     "--cov-report=term-missing" # Coverage disabled,
    #     "--cov-report=html:htmlcov" # Coverage disabled,
#    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
    "-ra",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ["py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sage"]
known_third_party = ["numpy", "pydantic", "rich", "click"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
force_alphabetical_sort_within_sections = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]

[tool.coverage.run]
source = ["sage.utils"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

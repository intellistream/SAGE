name: test

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    env:
      CI: true          
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      SILICONCLOUD_API_KEY: ${{ secrets.SILICONCLOUD_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
      ALIBABA_API_KEY: ${{ secrets.ALIBABA_API_KEY }}
      VLLM_API_KEY: ${{ secrets.VLLM_API_KEY }}
      HF_ENDPOINT: https://hf-mirror.com
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 1
        clean: true
      timeout-minutes: 8
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      timeout-minutes: 5
      
    - name: Create pip cache directory
      run: |
        mkdir -p /home/runner/.cache/pip
        mkdir -p /tmp/pip-cache
      
    - name: Setup Miniconda for quickstart.sh
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        use-mamba: true
        auto-activate-base: false
      timeout-minutes: 10
        
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake pkg-config
      timeout-minutes: 10
        
    - name: Install SAGE (Minimal Mode)
      shell: bash -l {0}
      env:
        CI: true
        PIP_CACHE_DIR: /tmp/pip-cache
      run: |
        echo "Installing SAGE using quickstart.sh --minimal"
        conda --version
        chmod +x ./quickstart.sh
        ./quickstart.sh --minimal
      timeout-minutes: 15
        
    - name: Basic Import Tests
      run: |
        echo "=== Import Tests ==="
        python -c "import sage; print('✅ SAGE core import successful, version:', sage.__version__)"
        python -c "import sage.common; print('✅ sage.common import successful')"
        python -c "import sage.kernel; print('✅ sage.kernel import successful')"
        python -c "import sage.libs; print('✅ sage.libs import successful')"
        python -c "import sage.middleware; print('✅ sage.middleware import successful')"
        echo "=== CLI Test ==="
        sage --help
        sage version

  branch-guard:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR source branch
        env:
          HEAD_REF: ${{ github.head_ref }}
        run: |
          echo "PR head: $HEAD_REF"
          if [ "$HEAD_REF" != "main-dev" ]; then
            echo "::error ::Only PRs from 'main-dev' to 'main' are allowed."
            exit 1
          else
            echo "✅ PR source branch validation passed: $HEAD_REF"
          fi

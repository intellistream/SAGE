# ========================================
# 🚫 WORKFLOW DISABLED TO SAVE COSTS 🚫
# ========================================
# 此工作流已被禁用以避免自动触发测试，节省费用
# 如需运行测试，请手动触发工作流
# This workflow has been disabled to avoid automatic test triggers and save costs
# To run tests, please trigger the workflow manually
# ========================================

name: PR Intelligence Testing (DISABLED)

on:
  workflow_dispatch:  # 仅允许手动触发
  # pull_request:     # 已禁用自动触发
  #   branches: [ main, develop, v*.*.* ]
  #   types: [opened, synchronize, reopened, ready_for_review]

jobs:
  intelligent-testing:
    name: Diff-Based Smart Testing
    runs-on: self-hosted
    timeout-minutes: 45
    
    # 跳过草稿PR
    if: github.event.pull_request.draft == false

    env:
      CI: true
      PYTHONPATH: ${{ github.workspace }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      SILICONCLOUD_API_KEY: ${{ secrets.SILICONCLOUD_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
      ALIBABA_API_KEY: ${{ secrets.ALIBABA_API_KEY }}
      HF_ENDPOINT: https://hf-mirror.com
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest tqdm
          # 安装项目依赖
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt || echo "Failed to install some requirements, continuing..."
          fi
          # 尝试安装项目，如果失败也继续
          pip install -e . || echo "Failed to install project in editable mode, continuing..."
          
      - name: Run intelligent diff testing
        id: diff-test
        run: |
          echo "🎯 Starting intelligent diff testing..."
          
          # 检查 test_runner.py 是否存在
          if [ ! -f "scripts/test_runner.py" ]; then
            echo "❌ Error: scripts/test_runner.py not found!"
            echo "This workflow requires the intelligent test runner script."
            exit 1
          fi
          
          # 确保基准分支是最新的
          git fetch origin ${{ github.base_ref }}
          
          # 显示将要分析的变化
          echo "📊 Analyzing changes against origin/${{ github.base_ref }}:"
          CHANGED_COUNT=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l)
          echo "📄 Found $CHANGED_COUNT changed files"
          
          if [ $CHANGED_COUNT -eq 0 ]; then
            echo "ℹ️ No changes detected, skipping tests"
            echo "result=skipped" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 显示前10个变化的文件
          echo "🔍 Preview of changed files:"
          git diff --name-only origin/${{ github.base_ref }}...HEAD | head -10
          
          # 运行智能差异测试
          echo "🚀 Running test_runner.py --diff..."
          python scripts/test_runner.py --diff --base origin/${{ github.base_ref }} --workers 2
          TEST_EXIT_CODE=$?
          
          echo "result=$TEST_EXIT_CODE" >> $GITHUB_OUTPUT
          echo "changed_files=$CHANGED_COUNT" >> $GITHUB_OUTPUT
          
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            echo "✅ All intelligent tests passed!"
          else
            echo "❌ Some intelligent tests failed (exit code: $TEST_EXIT_CODE)"
          fi
          
      - name: Upload test logs
        if: always() && steps.diff-test.outputs.result != 'skipped'
        uses: actions/upload-artifact@v3
        with:
          name: intelligent-test-logs-${{ github.event.number }}
          path: test_logs/
          retention-days: 14
          
      - name: Post results comment
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const testResult = '${{ steps.diff-test.outputs.result }}';
            const changedFiles = '${{ steps.diff-test.outputs.changed_files }}';
            
            // 处理跳过的情况
            if (testResult === 'skipped') {
              const body = `## ℹ️ Intelligent Testing Results
              
              **Status: SKIPPED**
              
              ### 📊 Test Summary
              - **Changed files analyzed**: 0
              - **Testing strategy**: Diff-based intelligent selection
              - **Base comparison**: \`${{ github.base_ref }}\`
              
              ### 🤔 Why was testing skipped?
              No changes were detected between your PR and the base branch. This can happen when:
              - The PR only contains merge commits
              - Changes were reverted
              - Only non-code files were modified
              
              ### ✅ Result
              No tests needed to run - your PR appears to have no functional changes.
              
              ---
              *Generated by PR Intelligence Testing workflow*`;
              
              // 创建或更新评论
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              
              const existingComment = comments.find(comment => 
                comment.body.includes('Intelligent Testing Results')
              );
              
              if (existingComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: body
                });
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: body
                });
              }
              return;
            }
            
            const success = testResult === '0';
            const statusEmoji = success ? '✅' : '❌';
            const statusText = success ? 'PASSED' : 'FAILED';
            const actionText = success ? 'Ready for review!' : 'Needs attention';
            
            const body = `## ${statusEmoji} Intelligent Testing Results
            
            **Status: ${statusText}**
            
            ### 📊 Test Summary
            - **Changed files analyzed**: ${changedFiles}
            - **Testing strategy**: Diff-based intelligent selection
            - **Base comparison**: \`${{ github.base_ref }}\`
            - **Parallel workers**: 2
            - **Tool**: \`scripts/test_runner.py --diff\`
            
            ### 🧠 How Intelligent Testing Works
            This workflow uses \`scripts/test_runner.py --diff\` to:
            1. 📝 Analyze git diff to identify changed files
            2. 🔍 Find parent directories containing test folders  
            3. 🎯 Run only tests affected by your changes
            4. ⚡ Execute tests in parallel for speed
            5. 📋 Generate structured logs for debugging
            
            ### ${success ? '🎉' : '⚠️'} ${actionText}
            ${success ? 
              'All tests affected by your changes have passed successfully!' :
              'Some tests failed. Please check the workflow logs and fix the issues.'
            }
            
            📎 **Test logs**: Available as workflow artifacts for 14 days
            📝 **Workflow logs**: Check the "Actions" tab for detailed output
            
            ---
            *Generated by PR Intelligence Testing workflow*`;
            
            // 查找现有评论并更新，或创建新评论
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('## ✅ Intelligent Testing Results') || 
              comment.body.includes('## ❌ Intelligent Testing Results') ||
              comment.body.includes('## ℹ️ Intelligent Testing Results')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
            
      - name: Final status check
        if: always() && steps.diff-test.outputs.result != 'skipped'
        run: |
          if [ "${{ steps.diff-test.outputs.result }}" != "0" ]; then
            echo "💥 Intelligent testing detected issues in your PR"
            echo "Please review the test logs and fix the failing tests"
            exit 1
          else
            echo "🎉 All intelligent tests passed! PR is ready for review."
          fi

# ========================================
# 🚫 WORKFLOW DISABLED TO SAVE COSTS 🚫
# ========================================
# 此工作流已被禁用以避免自动触发测试，节省费用
# 如需运行测试，请手动触发工作流
# This workflow has been disabled to avoid automatic test triggers and save costs
# To run tests, please trigger the workflow manually
# ========================================

name: PR Smart Testing (DISABLED)

on:
  workflow_dispatch:  # 仅允许手动触发
  # pull_request:     # 已禁用自动触发
  #   branches: [ main, develop, v*.*.* ]
  #   types: [opened, synchronize, reopened]

jobs:
  smart-diff-testing:
    name: Smart Diff Testing
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      CI: true
      PYTHONPATH: ${{ github.workspace }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      SILICONCLOUD_API_KEY: ${{ secrets.SILICONCLOUD_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
      ALIBABA_API_KEY: ${{ secrets.ALIBABA_API_KEY }}
      HF_ENDPOINT: https://hf-mirror.com

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史以便进行diff比较
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-xdist tqdm
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install -e .
          
      - name: Verify test runner exists
        run: |
          if [ ! -f "scripts/test_runner.py" ]; then
            echo "❌ Error: scripts/test_runner.py not found!"
            exit 1
          fi
          chmod +x scripts/test_runner.py
          echo "✅ Test runner found and made executable"
          
      - name: List available test directories
        run: |
          echo "📋 Listing all available test directories:"
          python scripts/test_runner.py --list || echo "Failed to list test directories"
          
      - name: Run smart diff testing
        id: smart-test
        run: |
          echo "🎯 Running smart diff testing..."
          echo "🔍 Comparing against: origin/${{ github.base_ref }}"
          
          # 设置基准分支
          BASE_BRANCH="origin/${{ github.base_ref }}"
          
          # 确保我们有最新的基准分支
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}
          
          # 显示将要比较的文件变化
          echo "📄 Changed files in this PR:"
          git diff --name-only $BASE_BRANCH...HEAD | head -20
          
          # 运行智能测试
          python scripts/test_runner.py --diff --base $BASE_BRANCH --workers 2
          
          echo "test_result=$?" >> $GITHUB_OUTPUT
          
      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs-pr-${{ github.event.number }}
          path: test_logs/
          retention-days: 30
          
      - name: Generate test summary
        if: always()
        run: |
          echo "## 🧪 Smart Diff Testing Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.smart-test.outputs.test_result }}" = "0" ]; then
            echo "### ✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🎉 Great job! The smart testing system detected changes in your PR and ran only the relevant tests. All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Some tests failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ The smart testing system detected issues with your changes. Please check the test logs for details." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Testing Strategy" >> $GITHUB_STEP_SUMMARY
          echo "This workflow uses the **smart diff testing** approach:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 Analyzes git diff against base branch: \`${{ github.base_ref }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 Identifies affected files and their parent test directories" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 Runs only the relevant tests in parallel (2 workers)" >> $GITHUB_STEP_SUMMARY
          echo "- 📝 Generates detailed logs for each test directory" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 Changed Files Analyzed" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          git diff --name-only origin/${{ github.base_ref }}...HEAD | head -20 >> $GITHUB_STEP_SUMMARY
          if [ $(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l) -gt 20 ]; then
            echo "... and $(( $(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l) - 20 )) more files" >> $GITHUB_STEP_SUMMARY
          fi
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # 显示测试日志位置
          if [ -d "test_logs" ]; then
            echo "### 📋 Generated Test Logs" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            find test_logs -name "*.log" | head -10 >> $GITHUB_STEP_SUMMARY
            if [ $(find test_logs -name "*.log" | wc -l) -gt 10 ]; then
              echo "... and $(( $(find test_logs -name "*.log" | wc -l) - 10 )) more log files" >> $GITHUB_STEP_SUMMARY
            fi
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📎 **Test logs are available as artifacts and will be kept for 30 days.**" >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: Comment on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            const testResult = '${{ steps.smart-test.outputs.test_result }}';
            const success = testResult === '0';
            const emoji = success ? '✅' : '❌';
            const status = success ? 'All tests passed!' : 'Some tests failed';
            
            // 获取变化的文件数量
            const { execSync } = require('child_process');
            let changedFilesCount = 0;
            try {
              const changedFiles = execSync('git diff --name-only origin/${{ github.base_ref }}...HEAD', { encoding: 'utf8' });
              changedFilesCount = changedFiles.trim().split('\n').filter(f => f.trim()).length;
            } catch (e) {
              console.log('Could not get changed files count:', e.message);
            }
            
            const comment = `## ${emoji} Smart Diff Testing Results
            
            **${status}**
            
            ### 🎯 Smart Testing Summary
            - **Strategy**: Diff-based intelligent testing
            - **Base branch**: \`${{ github.base_ref }}\`
            - **Changed files**: ${changedFilesCount} files
            - **Workers**: 2 parallel processes
            - **Test logs**: Available as artifacts (30 days retention)
            
            ### 📋 How it works
            1. 🔍 Analyzes git diff between your PR and the base branch
            2. 🎯 Identifies affected files and finds their parent test directories
            3. 🚀 Runs only the relevant tests in parallel for efficiency
            4. 📝 Generates detailed logs for debugging
            
            ${success ? 
              '🎉 **Ready to merge!** All affected tests passed successfully.' : 
              '⚠️ **Action required:** Please fix the failing tests before merging. Check the workflow logs and test artifacts for details.'
            }
            
            ---
            *This comment was generated by the Smart Diff Testing workflow using \`scripts/test_runner.py --diff\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Set workflow status
        if: always()
        run: |
          if [ "${{ steps.smart-test.outputs.test_result }}" != "0" ]; then
            echo "❌ Smart diff testing failed"
            exit 1
          else
            echo "✅ Smart diff testing passed"
          fi

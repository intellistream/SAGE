# ==========================================
# TODO 转 Issue 工作流 (TODO-to-Issue)
# ==========================================
# 目的：自动将代码中的 TODO 注释转换为 GitHub Issues
# 
# 触发条件：
# - Pull Request 事件 (opened, synchronize, reopened)
# - 手动触发
#
# 功能：
# - 扫描代码中的 TODO 注释
# - 自动创建对应的 GitHub Issues
# - 在代码中插入 Issue URL 链接
# - 提交更改回 PR 分支
# ==========================================

name: TODO-to-Issue (PR)

on:
  workflow_dispatch:  # 允许手动触发
  pull_request:       # 自动触发
    types: [opened, synchronize, reopened]

jobs:
  # =======================
  # TODO 转 Issue 处理任务
  # =======================
  # 功能：扫描并处理代码中的 TODO 注释
  todo_to_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的git历史

      # 使用第三方 action 处理 TODO 转 Issue
      - name: TODO to Issue
        uses: alstr/todo-to-issue-action@v5
        with:
          INSERT_ISSUE_URLS: "true"  # 在代码中插入 Issue URL
          DIFF_URL: ""               # 不使用 diff URL

      # 配置 Git 用户信息
      - name: Set Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # 提交修改回 PR 分支
      - name: Commit and Push Changes
        run: |
          git add -A
          if [[ $(git status --porcelain) ]]; then
            git commit -m "chore: add TODO issue links via todo-to-issue-action"
            git push origin HEAD:${{ github.event.pull_request.head.ref }}
          else
            echo "No TODO links to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

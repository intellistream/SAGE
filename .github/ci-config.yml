# SAGE CI/CD Configuration
# 此文件定义了持续集成和持续部署的配置参数

# 测试配置
test:
  # 快速检查配置
  quick_check:
    enabled: true
    timeout: 600  # 10分钟超时
    test_paths: 
      - "sage/cli/tests/"
      - "sage/lib/tests/evaluate_test.py"
      - "sage/utils/tests/"
    
  # 完整测试配置
  full_test:
    enabled: true
    timeout: 3600  # 60分钟超时
    coverage_threshold: 75
    test_paths:
      - "sage/"
      - "sage_ext/"
    exclude_paths:
      - "sage/service/tests/test_integrated_memory_service.py"  # 超时问题
    
  # 测试触发条件
  triggers:
    pr_branches: ["main", "develop", "refactor/*"]
    file_patterns: ["*.py", "*.yaml", "*.yml"]
    exclude_paths: 
      - "docs/**"
      - "*.md"
      - "logs/**"
      - "test_logs/**"
      - ".github/workflows/archived/**"

# 构建配置
build:
  # Python包构建
  python:
    version: "3.11"
    wheel_type: "bytecode"  # source | bytecode
    include_c_extensions: true
    
  # C扩展构建
  c_extensions:
    - name: "ring_buffer"
      path: "sage/utils/mmap_queue"
      build_script: "build.sh"
      output_files: ["ring_buffer.so", "libring_buffer.so"]

# 部署配置
deploy:
  # PyPI发布
  pypi:
    enabled: false  # 闭源项目不发布到公共PyPI
    test_pypi: false
    
  # 私有仓库
  private_repo:
    enabled: true
    type: "artifactory"  # artifactory | nexus | custom
    
  # 环境配置
  environments:
    - name: "staging"
      auto_deploy: true
      branch: "develop"
    - name: "production"
      auto_deploy: false
      branch: "main"
      approval_required: true

# 质量检查
quality:
  # 代码质量检查
  code_quality:
    enabled: true
    tools: ["flake8", "black", "mypy"]
    fail_on_error: false
    
  # 安全扫描
  security:
    enabled: true
    tools: ["bandit", "safety"]
    fail_on_high: true
    
  # 依赖检查
  dependencies:
    enabled: true
    check_vulnerabilities: true
    auto_update_minor: false

# 通知配置
notifications:
  # Slack通知
  slack:
    enabled: false
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channels:
      - "#sage-ci"
    notify_on: ["failure", "fixed"]
    
  # 邮件通知
  email:
    enabled: false
    recipients: []
    notify_on: ["failure"]

# 缓存配置
cache:
  # Python依赖缓存
  python_deps:
    enabled: true
    ttl: "7d"
    
  # 构建缓存
  build_artifacts:
    enabled: true
    ttl: "30d"
    
  # 测试缓存
  test_results:
    enabled: true
    ttl: "3d"

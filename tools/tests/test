#!/bin/bash
#
# SAGE Framework 测试入口脚本
# Main test entry script for SAGE Framework

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

# 颜色输出
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

show_help() {
    cat << EOF
🧪 SAGE Framework 测试工具

使用方法:
  $0 <command> [options]

命令:
  quick           快速测试主要包
  all             测试所有包
  diagnose        运行诊断和状态检查
  packages PKG... 测试指定包
  help            显示此帮助

快速命令:
  $0 quick                    # 快速测试
  $0 all --summary            # 测试所有包，显示摘要
  $0 diagnose                 # 运行诊断
  $0 packages sage-libs       # 测试指定包

详细用法请参考:
  - Python 工具: python $SCRIPT_DIR/run_tests.py --help
  - Bash 工具:   $SCRIPT_DIR/test_all_packages.sh --help
  - 快速工具:    $SCRIPT_DIR/quick_test.sh --help

EOF
}

case "${1:-help}" in
    quick|q)
        shift
        echo -e "${BLUE}🚀 启动快速测试${NC}"
        exec python "$SCRIPT_DIR/run_tests.py" --quick "$@"
        ;;
    all|a)
        shift
        echo -e "${BLUE}🔍 启动全面测试${NC}"
        exec python "$SCRIPT_DIR/run_tests.py" --all "$@"
        ;;
    diagnose|d)
        shift
        echo -e "${BLUE}🔧 启动诊断检查${NC}"
        exec python "$SCRIPT_DIR/run_tests.py" --diagnose "$@"
        ;;
    packages|p)
        shift
        if [[ $# -eq 0 ]]; then
            echo -e "${YELLOW}请指定要测试的包名${NC}"
            exit 1
        fi
        echo -e "${BLUE}📦 测试指定包: $*${NC}"
        exec python "$SCRIPT_DIR/run_tests.py" --packages "$@"
        ;;
    bash|b)
        shift
        echo -e "${BLUE}🔨 使用 Bash 测试工具${NC}"
        exec "$SCRIPT_DIR/test_all_packages.sh" "$@"
        ;;
    help|h|--help|-h)
        show_help
        ;;
    *)
        echo -e "${YELLOW}未知命令: $1${NC}"
        show_help
        exit 1
        ;;
esac

# SAGE智能化Monorepo工作空间配置
# 这个文件主要为IDE和工具提供工作空间级别的配置

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sage-workspace"
version = "1.0.0"
description = "SAGE Framework - 智能化Monorepo工作空间"
readme = "README.md"  
requires-python = ">=3.10"
license = "Apache-2.0"
authors = [
    {name = "IntelliStream Team", email = "sage@intellistream.cc"},
]
keywords = ["rag", "llm", "framework", "monorepo", "workspace"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# 这是一个虚拟包，用于工作空间管理
dependencies = []

[project.optional-dependencies]
# 基础安装 - 只包含核心包
basic = [
    "sage-utils",
    "sage-core",
    "sage-lib",
]

# 扩展安装 - 包含性能扩展
extended = [
    "sage-utils",
    "sage-core", 
    "sage-lib",
    "sage-extensions",
    "sage-plugins",
]

# 完整安装 - 包含所有包
full = [
    "sage-utils",
    "sage-core",
    "sage-lib", 
    "sage-extensions",
    "sage-plugins",
    "sage-service",
    "sage-cli",
]

# 开发环境
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0", 
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "tqdm>=4.60.0",
    "pipmaster>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://sage-docs.intellistream.cc"

[tool.setuptools]
# 由于这是一个工作空间级别的虚拟包，我们不包含任何 Python 包
py-modules = []

[tool.setuptools.packages.find]
exclude = [
    "app*",
    "data*", 
    "config*",
    "archive*",
    "test_env*",
    "packages*",
    "test_logs*",
    "test_reports*",
    "htmlcov*",
    "scripts*",
    "docs*",
]

[tool.black]
line-length = 88
target-version = ["py311"]
extend-exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
    | packages/.*/build
    | packages/.*/dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sage"]
src_paths = [
    "packages/sage-core/src",
    "packages/sage-utils/src",
    "packages/sage-lib/src", 
    "packages/sage-extensions/src",
    "packages/sage-plugins/src",
    "packages/sage-service/src",
    "packages/sage-cli/src",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
namespace_packages = true
explicit_package_bases = true
mypy_path = [
    "packages/sage-core/src",
    "packages/sage-utils/src",
    "packages/sage-lib/src",
    "packages/sage-extensions/src", 
    "packages/sage-plugins/src",
    "packages/sage-service/src",
    "packages/sage-cli/src",
]

[[tool.mypy.overrides]]
module = "sage.*"
ignore_missing_imports = false

[tool.pytest.ini_options]
testpaths = [
    "packages/sage-core/tests",
    "packages/sage-utils/tests",
    "packages/sage-lib/tests",
    "packages/sage-extensions/tests",
    "packages/sage-plugins/tests", 
    "packages/sage-service/tests",
    "packages/sage-cli/tests",
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=sage",
    "--cov-report=term-missing",
    "-v",
]

[tool.coverage.run]
source = [
    "packages/sage-core/src",
    "packages/sage-utils/src", 
    "packages/sage-lib/src",
    "packages/sage-extensions/src",
    "packages/sage-plugins/src",
    "packages/sage-service/src",
    "packages/sage-cli/src",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

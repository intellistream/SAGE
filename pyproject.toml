# SAGE三层架构Monorepo工作空间配置
# 新架构：Kernel (内核) -> Middleware (中间件) -> Userspace (用户空间)
# 支持开源版本和商业版本的统一管理

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sage-workspace"
version = "1.0.0"
description = "SAGE Framework - 三层架构智能化Monorepo工作空间 (Kernel + Middleware + Userspace)"
readme = "README.md"  
requires-python = ">=3.10"
license = "Apache-2.0"
authors = [
    {name = "IntelliStream Team", email = "sage@intellistream.cc"},
]
keywords = ["rag", "llm", "framework", "monorepo", "workspace", "kernel", "middleware", "userspace"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# 这是一个虚拟包，用于工作空间管理
# 新的三层架构：
# - sage-kernel: 统一内核层 (Core + Runtime + Utils + CLI集成)
# - sage-middleware: 中间件层 (LLM服务、数据库、内存管理)
# - sage-userspace: 用户空间层 (RAG算子、插件、高级功能)
# - sage-cli: 独立的命令行工具包
dependencies = []

[project.optional-dependencies]
# 按功能分层的安装选项 - 基于新的三层架构
minimal = ["sage-kernel"]                                    # 最小安装：仅内核
core = ["sage-kernel", "sage-middleware"]                   # 核心安装：内核 + 中间件
standard = ["sage-kernel", "sage-middleware", "sage-userspace"]  # 标准安装：完整开源版
cli = ["sage-kernel", "sage-middleware", "sage-userspace", "sage-cli"]  # 包含CLI工具

# 商业版选项
commercial-kernel = ["sage-kernel-commercial"]
commercial-middleware = ["sage-middleware-commercial"] 
commercial-userspace = ["sage-userspace-commercial"]
commercial = [
    "sage-kernel-commercial", "sage-middleware-commercial", "sage-userspace-commercial"
]

# 组合安装选项
full = [
    "sage-kernel", "sage-middleware", "sage-userspace", "sage-cli"
]
enterprise = [
    "sage-kernel", "sage-middleware", "sage-userspace", "sage-cli",
    "sage-kernel-commercial", "sage-middleware-commercial", "sage-userspace-commercial"
]

# 社区版与专业版安装选项 (符合商业化策略)
community = [
    "sage-kernel", "sage-middleware", "sage-userspace"
]
professional = [
    "sage-kernel", "sage-middleware", "sage-userspace", "sage-cli",
    "sage-kernel-commercial", "sage-middleware-commercial"
]

# 安装示例:
# pip install sage-workspace[minimal]     # 仅内核
# pip install sage-workspace[core]        # 内核 + 中间件  
# pip install sage-workspace[standard]    # 完整开源版
# pip install sage-workspace[community]   # 社区版 (与standard相同)
# pip install sage-workspace[full]        # 开源版 + CLI工具
# pip install sage-workspace[enterprise]  # 企业版 (需要商业许可)

# 统一的开发环境配置
dev = [
    # 测试框架
    "pytest>=7.4.4",
    "pytest-asyncio>=0.21.0", 
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    
    # 代码质量工具
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0", 
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    
    # 构建和发布工具
    "build>=0.10.0",
    "wheel>=0.40.0",
    "tqdm>=4.60.0",
    "pipmaster>=0.5.1",
]

# 测试环境（最小测试依赖集）
test = [
    "pytest>=7.4.4",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
]

# 性能分析工具
profile = [
    "py-spy>=0.3.0",
    "memory-profiler>=0.60.0", 
    "line-profiler>=4.0.0",
    "pytest-benchmark>=4.0.0",
]

# 版本约束（用于统一管理关键依赖版本）
constraints = [
    "numpy==2.2.6",
    "pydantic==2.10.4", 
    "PyYAML==6.0.2",
    "rich==13.9.4",
    "torch==2.4.0",
    "transformers==4.45.2",
    "sentence-transformers==3.1.1",
    "faiss-cpu==1.9.0",
    "httpx==0.28.1",
    "fastapi==0.115.12",
    "pytest==7.4.4",
]

[project.urls]
Homepage = "https://github.com/intellistream/SAGE"
Repository = "https://github.com/intellistream/SAGE.git"
Documentation = "https://sage-docs.intellistream.cc"

[tool.setuptools]
# 由于这是一个工作空间级别的虚拟包，我们不包含任何 Python 包
py-modules = []

[tool.setuptools.packages.find]
exclude = [
    "app*",
    "data*", 
    "config*",
    "archive*",
    "test_env*",
    "packages*",
    "test_logs*",
    "test_reports*",
    "htmlcov*",
    "scripts*",
    "docs*",
]

[tool.black]
line-length = 88
target-version = ["py311"]
extend-exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
    | packages/.*/build
    | packages/.*/dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sage"]
src_paths = [
    "packages/sage-kernel/src",
    "packages/sage-middleware/src",
    "packages/sage-userspace/src", 
    "packages/tools/sage-cli/src",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
namespace_packages = true
explicit_package_bases = true
mypy_path = [
    "packages/sage-kernel/src",
    "packages/sage-middleware/src",
    "packages/sage-userspace/src",
    "packages/tools/sage-cli/src",
]

[[tool.mypy.overrides]]
module = "sage.*"
ignore_missing_imports = false

[tool.pytest.ini_options]
testpaths = [
    "packages/sage-kernel/tests",
    "packages/sage-middleware/tests",
    "packages/sage-userspace/tests",
    "packages/tools/sage-cli/tests",
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-v",
]

# Coverage sections completely removed
